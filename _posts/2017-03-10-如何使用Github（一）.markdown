---
layout: post
title:  如何使用Github（一）
date:   2017-03-10 09:00:00 +0800
description: You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. # Add post description (optional)
img: 201703/bg/git-bg.jpg # Add image post (optional)
tags: [github,教程]
author: Oriel # Add name author (optional)
---
**说到什么是Github，我们先看一下[维基](https://zh.wikipedia.org/wiki/GitHub "维基")对于它的描述：“GitHub是一个通过Git进行版本控制的软件源代码托管服务，由GitHub公司（曾称Logical Awesome）的开发者Chris Wanstrath、PJ Hyett和Tom Preston-Werner使用Ruby on Rails编写而成。**

**GitHub同时提供付费账户和免费账户。这两种账户都可以创建公开的代码仓库，但是付费账户还可以创建私有的代码仓库。根据在2009年的Git用户调查，GitHub是最流行的Git访问站点。除了允许个人和组织创建和访问保管中的代码以外，它也提供了一些方便社会化共同软件开发的功能，即一般人口中的社区功能，包括允许用户追踪其他用户、组织、软件库的动态，对软件代码的改动和bug提出评论等。GitHub也提供了图表功能，用于概观显示开发者们怎样在代码库上工作以及软件的开发活跃程度。截止到2015年，GitHub已经有超过九百万注册用户和2110万代码库。事实上已经成为了世界上最大的代码存放网站和开源社区。”**

------------
当初在首次接触Github的时候看着网上各种的教程，整个人都有点懵。其实用习惯了以后才会发现Github真的很好用。在平时使用github的时候常使用的有两个，一个是GIT，一个是Github的windows客户端。其中的GIT适合于习惯用命令行提交的程序员，而github客户端更适合初次接触人，用起来比较方便，容易上手，且不需要学习了解命令行的使用。今天的这一片文章介绍的就是Github的安装和使用。

###  一、安装与注册
1.下载[github for windows](https://desktop.github.com/ "github for windows")。直接点击next安装。
2.登录到[Github](https://github.com/ "Github")官网，注册一个github账号。

![github官网]({{site.baseurl}}/assets/img/201703/1.png)

注册好以后你就可以开始你的github之旅啦~

### 二、创建第一个项目
1.现在我们就可以打开github的客户端了。github的客户端界面看起来相当的简约清爽。

![github界面]({{site.baseurl}}/assets/img/201703/github界面.png)

在github客户端的右上角你会看到一个齿轮形状的按钮，点击齿轮，选择【options】就会弹出一个登录设置的界面。
2.在登录界面中点击【add account】按钮，即可输入你刚才注册好的github账号进行登录了。
![github登录]({{site.baseurl}}/assets/img/201703/登录.png)
3.登录完成后，点击左上角的+号，会看到三个选项。Add，Create，Clone。  我们分别来介绍一下这三个功能。
#### Add功能
如果本地有工程，就可以使用Add添加

![add]({{site.baseurl}}/assets/img/201703/add.png)

#### Clone功能
这个功能其实最好理解了，克隆这名字通俗易懂好理解。 如何使用Clone功能呢？  就是将在浏览器上已经创建好的项目导入到本地，换句话说就是下载到本地。

![clone]({{site.baseurl}}/assets/img/201703/clone.png)

#### Create功能
创建一个代码库， Name填写你的仓库名字。Local path写你将要保存在本地路径。

![create]({{site.baseurl}}/assets/img/201703/create.png)

我们主要从这个功能开始github之旅。  我们在这里填写First，来创建第一个我们自己的repoeitory。输入项目名称和地址后点击下面的对号即可创建一个仓库。

4.此时，在github界面左侧边栏中，你已经有了你的第一个仓库，first。
![first]({{site.baseurl}}/assets/img/201703/first.png)

鼠标右击该仓库，选择【open in explorer】，打开仓库的本地路径，也就是你刚才选择的local path。在该路径下新建一个文本文档。且随意输入一行内容后保存文档。此时再次打开github，点击first仓库，你会发现，在change界面会提醒你有一个新的文本需要提交。

> 这个是测试文本
你好

并且前面会有蓝色标识，那么这个蓝色标识是什么用呢？ 并且前面会有蓝色标识，那么这个蓝色标识是什么用呢?其实这个蓝色标识是提示你会上改变的文本。比如我第一次只想改变 这个是测试文本并不想把你好上传。 这时我们点击一下你好的前面的蓝色标识。

![new]({{site.baseurl}}/assets/img/201703/new.png)

你会发现你好前面的蓝色标识没有了。 我们填写好Summer和Description Summer就是这次改动的总结，我们也可以理解为标题*（必填），而Description可以理解为详细概况（选填）*我们这里只选择第一个修改对象，也就是这个是测试文本就行修改。summer我们填写为第一次修改，Description我们填写为增加了这个是测试文本的内容，之后点击Commit to master。

切换到History目录下  我们会发现他改变了。 这次我们把你好进行添加。

![history]({{site.baseurl}}/assets/img/201703/history.png)

#### 上传与同步
你已经在本地创建了你的第一个仓库和文件，接下来，我们需要把本地的文件和仓库上传和同步到我们的github中。点击右上角的publish,输入对于改文件的描述后，即可上传。

![publish]({{site.baseurl}}/assets/img/201703/publish.png)

当你的代码库上传后就会发现，原来的publish已经变为了Sync。  点击Sync同步代码库！

------------


**现在我们已经完成了github的安装和注册，同时也新建了我们的第一个仓库和第一个文档。在下一篇教程中，我会介绍一下github的分支部分。下一篇见啦~**

转载请注明出处。
文中图片及部分文字by：[杨晓辉](https://www.zhihu.com/question/20070065/answer/117017972 "杨晓辉")







